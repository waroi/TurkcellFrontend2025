{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/apple/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/app/api/crypto-price/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nconst API_KEY = process.env.NEXT_PUBLIC_CMC_API_KEY;\n\nexport async function GET(req: Request) {\n  const { searchParams } = new URL(req.url);\n  const ids = searchParams.get('ids');\n  const type = searchParams.get('type');\n\n  try {\n    let url = '';\n\n    if (type === 'info' && ids) {\n      url = `https://pro-api.coinmarketcap.com/v2/cryptocurrency/info?id=${ids}`;\n    }\n\n    else if (type === 'historical' && ids) {\n      const timeEnd = new Date().toISOString();\n      const timeStart = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();\n      url = `https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/historical?id=${ids}&interval=1d&time_start=${timeStart}&time_end=${timeEnd}&convert=USD`;\n    }\n\n    else if (type === 'ohlcv' && ids) {\n      const today = new Date();\n      const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n    \n      const timeEnd = today.toISOString().split('T')[0];      \n      const timeStart = sevenDaysAgo.toISOString().split('T')[0];\n    \n      url = `https://pro-api.coinmarketcap.com/v2/cryptocurrency/ohlcv/historical?id=${ids}&time_start=${timeStart}&time_end=${timeEnd}&time_period=daily&convert=USD`;\n    }\n\n    else {\n      url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest?limit=100';\n    }\n\n    const response = await fetch(url, {\n      headers: {\n        'X-CMC_PRO_API_KEY': API_KEY!,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`CoinMarketCap API error: ${response.status} - ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    return NextResponse.json(data);\n\n  } catch (error: any) {\n    console.error('Error fetching data from CoinMarketCap:', error.message);\n\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AAEC,eAAe,IAAI,GAAY;IACpC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,MAAM,aAAa,GAAG,CAAC;IAC7B,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI;QACF,IAAI,MAAM;QAEV,IAAI,SAAS,UAAU,KAAK;YAC1B,MAAM,CAAC,4DAA4D,EAAE,KAAK;QAC5E,OAEK,IAAI,SAAS,gBAAgB,KAAK;YACrC,MAAM,UAAU,IAAI,OAAO,WAAW;YACtC,MAAM,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,WAAW;YAC5E,MAAM,CAAC,yEAAyE,EAAE,IAAI,wBAAwB,EAAE,UAAU,UAAU,EAAE,QAAQ,YAAY,CAAC;QAC7J,OAEK,IAAI,SAAS,WAAW,KAAK;YAChC,MAAM,QAAQ,IAAI;YAClB,MAAM,eAAe,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;YAE9D,MAAM,UAAU,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YACjD,MAAM,YAAY,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YAE1D,MAAM,CAAC,wEAAwE,EAAE,IAAI,YAAY,EAAE,UAAU,UAAU,EAAE,QAAQ,8BAA8B,CAAC;QAClK,OAEK;YACH,MAAM;QACR;QAEA,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,qBAAqB;YACvB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,SAAS,UAAU,EAAE;QACxF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,2CAA2C,MAAM,OAAO;QAEtE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}}]
}